schemaVersion: 2.2.0
metadata:
  name: go-hello-world
parent:
  uri: https://gist.githubusercontent.com/l0rd/ce9d4bab4e148c4599bdaf59aebc86bb/raw/58807304196944ae5d5f683878f23399cd503418/spuranam-parent.yaml
  components:
    - name: tools
      container:
        env:
          - name: SHELL
            value: "/bin/bash"
          - name: HISTFILE
            value: "/home/user/.bash_history"
        memoryLimit: 4Gi
        cpuLimit: 3000m
        endpoints:
          - name: preso
            targetPort: 8080
            path: /
            protocol: http
            exposure: public
            secure: true
            attributes:
              urlRewriteSupported: false
# events:
#   postStart:
#     - init
commands:
  - id: init
    exec:
      label: "0. install-tools (autorun)"
      component: tools
      workingDir: ${PROJECTS_ROOT}
      commandLine: |
        nohup bash -c '{
          # Wait for container entrypoint to compete executing
          until [ -f /home/user/.stow_completed ]; do sleep 1; done

          ## A workaround for stow failing with errors like
          ## stow: ERROR: Could not create directory: .local/share (File exists)
          if [[ -s /home/user/.stow_completed ]]; then
            stow . -t /home/user/ -d /home/tooling/ --no-folding --adopt -v 2 >/tmp/stow-rerun.log 2>&1
            cp -f /tmp/{stow.log,stow-rerun.log} /home/user/
          fi

          # Source bash initialization script
          source /home/user/.bashrc

          ###########################
          ## Expand Dev Space PVC size
          ###########################
          #until [ -f /home/user/.kube/config ]; do sleep 1; done
          #kubectl patch pvc/claim-devworkspace \
          #  --namespace ${DEVWORKSPACE_NAMESPACE} \
          #  --patch "{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}}"

          ###########################
          ## mark completion of init
          ###########################
          touch /home/user/.init_completed
          echo ""
          echo "init complete, restart terminal"
          echo ""
        }' &
  - id: go-present
    exec:
      label: "1. go-present"
      component: tools
      workingDir: ${PROJECT_SOURCE}/preso
      commandLine: |
        source $HOME/.bashrc
        until [ -f /home/user/.init_completed ]; do echo "waiting for init"; sleep 1; done

        GOBIN=${HOME}/bin go install -v -ldflags='-s -w' golang.org/x/website/tour@latest
        GOBIN=${HOME}/bin go install -v -ldflags='-s -w' golang.org/x/tools/cmd/present@latest
        present -http="0.0.0.0:8080" -notes -content=${PROJECT_SOURCE}/preso
      group:
        kind: run
